/// <reference types="node" />
import busboy from 'busboy';
import { FastifyPluginAsync, FastifyRequest, FastifyServerOptions } from 'fastify';
export declare enum FormPluginContentTypes {
    FromMultipart = "multipart/form-data",
    FormUrlencoded = "application/x-www-form-urlencoded"
}
export interface FormPluginContentParserOptions {
    onConstructorPoisoning?: FastifyServerOptions['onConstructorPoisoning'];
    onProtoPoisoning?: FastifyServerOptions['onProtoPoisoning'];
    busboyOptions?: Omit<busboy.BusboyConfig, 'headers'>;
}
export interface FormPluginOptions extends FormPluginContentParserOptions {
    multipart?: boolean;
    urlencoded?: boolean;
}
export declare type ParsedFormBody = Record<string, string | string[]>;
export declare const requestParserFactory: ({ busboyOptions, ...parserOptions }: FormPluginContentParserOptions) => (req: FastifyRequest) => Promise<ParsedFormBody>;
export declare const formPlugin: FastifyPluginAsync<FormPluginOptions>;
declare const _default: FastifyPluginAsync<FormPluginOptions, import("http").Server, import("fastify").FastifyTypeProviderDefault>;
export default _default;
